continue
render
continue
next
continue
*args
args
exception
next
step
next
step
continue
next
continue
next
step
Shipment.different_products_in_sale(@sale.id)
continue
@sale.id
Shipment.different_products_in_sale(@sale.id)
continue
Shipment.different_products_in_sale(@sale_id)
continue
diffs_prods[0]
diffs_prods
@string_products
continue
next
@string_products
continue
ps.to_json
ps = Shipment.where(sale_id: @sale ).joins(:product).select("products.id","products.name").uniq
continue
ps[0].name
ps = @shipments.joins(:product).select("products.id","products.name").uniq
ps.each do |s| puts s.to_json end
ps.each do |s| puts s.product_id end
ps.each do |s| puts s.product.name end
ps.each do |s| puts s end
ps.each do |s| s.puts end
ps.each do |s|
ps = @shipments.joins(:product).select("products.name").uniq
continue
ps = @shipments.joins(:product).select(products.id).uniq
ps[0]
ps
ps = @shipments.joins(:product).select("distinct(products.id))")
ps[0]
ps
ps = @shipments.joins(:product).select("distinct(products.name))")
ps = @shipments.joins(:product).select("distinct(products.name))").
ps
ps[0].id
ps[0].name, ps[0].id
ps[0].name
ps[0]
ps = @shipments.joins(:product).select("products.id, products.name")
continue
ps
ps = @shipments.joins(:product).select("products.id, products.name")
@shipments.joins(:product).select("products.id, products.name")
@shipments.joins(:product).select("products.id")
@shipments.joins(:product).select(:product => {:id, :name})
@shipments.joins(:product).select(:product {:id, :name})
@shipments.joins(:product)
@shipments.joins(:products).to_json
@shipments.joins(:products).name
@shipments.joins(:products)
continue
next
@greenhouse
continue
params
continue
params
continue
params
continue
params
